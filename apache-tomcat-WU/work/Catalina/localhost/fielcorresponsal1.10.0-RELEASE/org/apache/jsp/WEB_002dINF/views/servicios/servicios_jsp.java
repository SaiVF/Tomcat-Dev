/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.0
 * Generated at: 2017-06-28 21:01:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.servicios;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class servicios_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/home/oem/Programas/apache-tomcat-8.5.6/webapps/fielcorresponsal1.10.0-RELEASE/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153399482000L));
    _jspx_dependants.put("/WEB-INF/tags/parent.tag", Long.valueOf(1498675530000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1479759956000L));
    _jspx_dependants.put("jar:file:/home/oem/Programas/apache-tomcat-8.5.6/webapps/fielcorresponsal1.10.0-RELEASE/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153399482000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("\n");
      out.write("\n");
      if (_jspx_meth_t_005fparent_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t\t$(document).ready(function(){\n");
      out.write("\t\t\tactiveHeader(\"servicesPage\");\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t$('.clickable').on('click', function () {\n");
      out.write("\t\t\tvar codigo = $(this).attr('data-target');\n");
      out.write("\t\t\tcodigo = codigo.replace(\"#\", \"\");\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/services/list',\n");
      out.write("\t\t\t\ttype : 'POST',\n");
      out.write("\t\t\t\tdata: {codigoCategoria: codigo}\n");
      out.write("\t\t\t}).done(function(result){\n");
      out.write("\t\t\t\t$(\"#\" + codigo + \" .thumbnail.thumbnail-custom\").remove();\n");
      out.write("\t\t\t\t$('#'+codigo).append(result);\n");
      out.write("\t\t\t}).fail(function(jqXHR, mensaje){\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("</script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tfunction irServicio(datos) {\n");
      out.write("\t\tvar url = $(datos).data(\"url\");\n");
      out.write("\t\twindow.location.href= url;\n");
      out.write("\t\t$('#myModalReading').modal('show');\n");
      out.write("\t}\n");
      out.write("\t$(\"#form-servicio\").submit(function(e) {\n");
      out.write("\t\t$('#myModalReading').modal('show');\n");
      out.write("\t\tif ($('#amount').val() != undefined) {\n");
      out.write("\t\t\t$('#amount').val($('#amount').val().split(\".\").join(\"\"));\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\t$(document).on('ready', function(e) {\n");
      out.write("\t\tif ($(\"#amount\").val() != undefined) {\n");
      out.write("\t\t\t$(\"#amount\").val(FormatNumberBy3($(\"#amount\").val(), \",\",\".\"));\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\t// http://www.hashemian.com/tools/thousand-separator.htm\n");
      out.write("\t// function to format a number with separators. returns formatted number.\n");
      out.write("\t// num - the number to be formatted\n");
      out.write("\t// decpoint - the decimal point character. if skipped, \".\" is used\n");
      out.write("\t// sep - the separator character. if skipped, \",\" is used\n");
      out.write("\tfunction FormatNumberBy3(num, decpoint, sep) {\n");
      out.write("\t  // check for missing parameters and use defaults if so\n");
      out.write("\t  if (arguments.length == 2) {\n");
      out.write("\t    sep = \",\";\n");
      out.write("\t  }\n");
      out.write("\t  if (arguments.length == 1) {\n");
      out.write("\t    sep = \",\";\n");
      out.write("\t    decpoint = \".\";\n");
      out.write("\t  }\n");
      out.write("\t  // need a string for operations\n");
      out.write("\t  num = num.toString();\n");
      out.write("\t  // separate the whole number and the fraction if possible\n");
      out.write("\t  a = num.split(decpoint);\n");
      out.write("\t  x = a[0]; // decimal\n");
      out.write("\t  y = a[1]; // fraction\n");
      out.write("\t  z = \"\";\n");
      out.write("\n");
      out.write("\n");
      out.write("\t  if (typeof(x) != \"undefined\") {\n");
      out.write("\t    // reverse the digits. regexp works from left to right.\n");
      out.write("\t    for (i=x.length-1;i>=0;i--)\n");
      out.write("\t      z += x.charAt(i);\n");
      out.write("\t    // add seperators. but undo the trailing one, if there\n");
      out.write("\t    z = z.replace(/(\\d{3})/g, \"$1\" + sep);\n");
      out.write("\t    if (z.slice(-sep.length) == sep)\n");
      out.write("\t      z = z.slice(0, -sep.length);\n");
      out.write("\t    x = \"\";\n");
      out.write("\t    // reverse again to get back the number\n");
      out.write("\t    for (i=z.length-1;i>=0;i--)\n");
      out.write("\t      x += z.charAt(i);\n");
      out.write("\t    // add the fraction back in, if it was there\n");
      out.write("\t    if (typeof(y) != \"undefined\" && y.length > 0)\n");
      out.write("\t      x += decpoint + y;\n");
      out.write("\t  }\n");
      out.write("\t  return x;\n");
      out.write("\t}\n");
      out.write("</script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t$(\"#amount\").on('keyup', function() {\n");
      out.write("\t\t$(this).val(formatMontoDecimal($(this).val()));\n");
      out.write("\t});\n");
      out.write("\t\t\n");
      out.write("\tvar LONG_MAX_DECIMALES = 2;\n");
      out.write("\tfunction formatMontoDecimal(num){\n");
      out.write("\t\tvar separador=num.split(\",\");\n");
      out.write("\t\tvar decimal;\n");
      out.write("\t\tvar entero;\n");
      out.write("\t\tif(separador.length>2){\n");
      out.write("\t\t\tentero=separador[0];\n");
      out.write("\t\t\tdecimal=separador[1];\n");
      out.write("\t\t\tentero=format(entero);\n");
      out.write("\t\t\tnum=entero+\",\"+decimal;\n");
      out.write("\t\t}else if(separador.length===2){\n");
      out.write("\t\t\tentero=separador[0];\n");
      out.write("\t\t\tdecimal=separador[1];\n");
      out.write("\t\t\tif(decimal.length>0 && decimal.length<=LONG_MAX_DECIMALES){\n");
      out.write("\t\t\t\tentero=format(entero);\n");
      out.write("\t\t\t\tnum=entero+\",\"+decimal;\n");
      out.write("\t\t\t}else if(decimal.length>LONG_MAX_DECIMALES){\n");
      out.write("\t\t\t\tdecimal=decimal.slice(0,-1);\n");
      out.write("\t\t\t\tentero=format(entero);\n");
      out.write("\t\t\t\tnum=entero+\",\"+decimal;\n");
      out.write("\t\t\t}if(decimal.length===0){\n");
      out.write("\t\t\t\tnum=format(entero);\n");
      out.write("\t\t\t\tnum=num+\",\";\n");
      out.write("\t\t\t}\t\n");
      out.write("\t\t}else{\n");
      out.write("\t\t\tnum=format(num);\n");
      out.write("\t\t}\n");
      out.write("\t\treturn num;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction format(input)\n");
      out.write("\t{\n");
      out.write("\t\tvar num = input.replace(/\\./g,'');\n");
      out.write("\t\tif(!isNaN(num)){\n");
      out.write("\t\t\tnum = num.toString().split('').reverse().join('').replace(/(?=\\d*\\.?)(\\d{3})/g,'$1.');\n");
      out.write("\t\t\tnum = num.split('').reverse().join('').replace(/^[\\.]/,'');\n");
      out.write("\t\t\tinput = num;\n");
      out.write("\t\t}else{ \t\t\n");
      out.write("\t\t\tinput = null;\n");
      out.write("\t\t}\n");
      out.write("\t\treturn input;\n");
      out.write("\t}\n");
      out.write("\t$('#btn-comprobante').on('click', function (){\n");
      out.write("\t\tvar tokenTicket = $(\"#ticket_comp_id\").val();\n");
      out.write("\t\tif(tokenTicket&&tokenTicket!=null&&tokenTicket!==\"\"){\n");
      out.write("\t\t\t$('#myModalReading').modal('show');\n");
      out.write("\t\t\tprintTicket(tokenTicket,function(data) {\n");
      out.write("\t\t\t\t$('#myModalReading').modal('hide');\n");
      out.write("\t\t\t\tcodigo = data.codigo;\n");
      out.write("\n");
      out.write("\t\t\t\tif (data.action != null) {\n");
      out.write("\t\t\t\t\tdata.action({\n");
      out.write("\t\t\t\t\t\t'token' : token\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tif (codigo == 'OK'){\n");
      out.write("\t\t\t\t\t$('#boxMessage').html(message(\"success\", \"Comprobante enviado a impresora...\"));\t\n");
      out.write("\t\t\t\t\t$('#boxMessage').slideDown(300);\n");
      out.write("\t\t\t\t\t$('#tokenTicket').val(\"\");\n");
      out.write("\t\t\t\t\tsetTimeout(function(){\n");
      out.write("\t\t\t\t\t\tlocation.href = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/home';\n");
      out.write("\t\t\t\t\t},3000);\n");
      out.write("\t\t\t\t\t$('#btn-comprobante').prop('disabled', true);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\telse {\n");
      out.write("\t\t\t\t\t$('#boxMessage').html(message(\"error\", \"Comprobante NO enviado a impresora...\"));\t\n");
      out.write("\t\t\t\t\t$('#boxMessage').slideDown(300);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}, function(xhRequest, ErrorText, thrownError) {\n");
      out.write("\t\t\t\t$('#myModalReading').modal('hide');\n");
      out.write("\t\t\t\t$('#boxMessage').html(message(\"error\", \"Comprobante NO enviado a impresora...\"));\t\n");
      out.write("\t\t\t\t$('#boxMessage').slideDown(300);\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_t_005fparent_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest)_jspx_page_context.getRequest();
    javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse)_jspx_page_context.getResponse();
    //  t:parent
    org.apache.jsp.tag.web.parent_tag _jspx_th_t_005fparent_005f0 = (new org.apache.jsp.tag.web.parent_tag());
    _jsp_getInstanceManager().newInstance(_jspx_th_t_005fparent_005f0);
    _jspx_th_t_005fparent_005f0.setJspContext(_jspx_page_context);
    _jspx_th_t_005fparent_005f0.setJspBody(new Helper( 0, _jspx_page_context, _jspx_th_t_005fparent_005f0, null));
    _jspx_th_t_005fparent_005f0.doTag();
    _jsp_getInstanceManager().destroyInstance(_jspx_th_t_005fparent_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_parent, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(new javax.servlet.jsp.tagext.TagAdapter((javax.servlet.jsp.tagext.SimpleTag) _jspx_parent));
      // /WEB-INF/views/servicios/servicios.jsp(6,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hasError == true}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t\t<div class=\"col-xs-12 col-sm-6 title-page\">\n");
          out.write("\t\t\t<h2>Pago de Servicios</h2>\n");
          out.write("\t\t</div>\n");
          out.write("\t\t<div class=\"col-xs-10 formulario-confirm cabecera\">\n");
          out.write("\t\t</div>\n");
          out.write("\t\t<div class=\"col-xs-10\" id=\"boxMessage\">\n");
          out.write("\t\t\t<div class=\"alert message-box alert-danger\">\n");
          out.write("\t\t\t\t");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${errorData.message}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\n");
          out.write("\t\t\t</div>\n");
          out.write("\t\t</div>\n");
          out.write("\t\t<div class='col-xs-5 title-link-services'>\n");
          out.write("\t\t\t<h3><a href='");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/services'><span class='glyphicon glyphicon-chevron-left'></span> TODOS LOS SERVICIOS</a></h3>\n");
          out.write("\t\t</div>\n");
          out.write("\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        throw new javax.servlet.jsp.SkipPageException();
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_parent, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest)_jspx_page_context.getRequest();
    javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse)_jspx_page_context.getResponse();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(new javax.servlet.jsp.tagext.TagAdapter((javax.servlet.jsp.tagext.SimpleTag) _jspx_parent));
      // /WEB-INF/views/servicios/servicios.jsp(21,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hasError != true}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write('\n');
          out.write('	');
          out.write('	');
          org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, (java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${body}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null), out, false);
          out.write('\n');
          out.write('	');
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        throw new javax.servlet.jsp.SkipPageException();
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    }
    return false;
  }

  private class Helper
      extends org.apache.jasper.runtime.JspFragmentHelper
  {
    private javax.servlet.jsp.tagext.JspTag _jspx_parent;
    private int[] _jspx_push_body_count;

    public Helper( int discriminator, javax.servlet.jsp.JspContext jspContext, javax.servlet.jsp.tagext.JspTag _jspx_parent, int[] _jspx_push_body_count ) {
      super( discriminator, jspContext, _jspx_parent );
      this._jspx_parent = _jspx_parent;
      this._jspx_push_body_count = _jspx_push_body_count;
    }
    public boolean invoke0( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest)_jspx_page_context.getRequest();
      javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse)_jspx_page_context.getResponse();
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, (java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${headers}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null), out, false);
      out.write('\n');
      out.write('	');
      if (_jspx_meth_c_005fif_005f0(_jspx_parent, _jspx_page_context))
        return true;
      out.write('\n');
      out.write('	');
      if (_jspx_meth_c_005fif_005f1(_jspx_parent, _jspx_page_context))
        return true;
      out.write("\n");
      out.write("\t<div class=\"modal fade\" id=\"myModalReading\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n");
      out.write("\t  <div class=\"modal-dialog\" role=\"document\">\n");
      out.write("\t    <div class=\"\" style=\"padding-top: 200px;\">\n");
      out.write("\t      <div class=\"modal-loading\">\n");
      out.write("\t        \n");
      out.write("\t      </div>\n");
      out.write("\t    </div>\n");
      out.write("\t  </div>\n");
      out.write("\t</div>\n");
      return false;
    }
    public void invoke( java.io.Writer writer )
      throws javax.servlet.jsp.JspException
    {
      javax.servlet.jsp.JspWriter out = null;
      if( writer != null ) {
        out = this.jspContext.pushBody(writer);
      } else {
        out = this.jspContext.getOut();
      }
      try {
        Object _jspx_saved_JspContext = this.jspContext.getELContext().getContext(javax.servlet.jsp.JspContext.class);
        this.jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,this.jspContext);
        switch( this.discriminator ) {
          case 0:
            invoke0( out );
            break;
        }
        jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,_jspx_saved_JspContext);
      }
      catch( java.lang.Throwable e ) {
        if (e instanceof javax.servlet.jsp.SkipPageException)
            throw (javax.servlet.jsp.SkipPageException) e;
        throw new javax.servlet.jsp.JspException( e );
      }
      finally {
        if( writer != null ) {
          this.jspContext.popBody();
        }
      }
    }
  }
}
